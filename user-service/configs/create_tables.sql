-- Create ENUM type for message status
DO
$$
BEGIN
CREATE TYPE message_status AS ENUM ('sent', 'delivered', 'read');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

-- Create ENUM type for user presence status
DO
$$
BEGIN
CREATE TYPE presence_status AS ENUM ('online', 'offline');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

-- Create User table
CREATE TABLE "User"
(
    user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    username VARCHAR(255)        NOT NULL,
    email    VARCHAR(255) UNIQUE NOT NULL,
    phone    VARCHAR(20) UNIQUE  NOT NULL
);

-- Create ChatRoom table
CREATE TABLE "ChatRoom"
(
    room_id    BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 101 INCREMENT BY 1) PRIMARY KEY,
    name       VARCHAR(255) NOT NULL,
    created_at TIMESTAMP    NOT NULL DEFAULT NOW(),
    created_by BIGINT       REFERENCES "User" (user_id) ON DELETE SET NULL
);
-- Create Message table
CREATE TABLE "Message"
(
    message_id   BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1001 INCREMENT BY 1) PRIMARY KEY,
    sender_id    BIGINT REFERENCES "User" (user_id) ON DELETE CASCADE,
    recipient_id BIGINT REFERENCES "User" (user_id) ON DELETE CASCADE,
    content      TEXT,
    room_id      BIGINT REFERENCES "ChatRoom" (room_id) ON DELETE CASCADE,
    timestamp    TIMESTAMP      NOT NULL DEFAULT NOW(),
    status       message_status NOT NULL,
    read_at      TIMESTAMP,
    created_at   TIMESTAMP      NOT NULL DEFAULT NOW()
);

-- Create UserPresence table
CREATE TABLE "UserPresence"
(
    user_id    BIGINT PRIMARY KEY REFERENCES "User" (user_id) ON DELETE CASCADE,
    status     presence_status NOT NULL,
    last_seen  TIMESTAMP,
    updated_at TIMESTAMP       NOT NULL DEFAULT NOW()
);


-- Optional: Add indexes for faster lookup on foreign key columns
CREATE INDEX idx_message_sender ON "Message" (sender_id);
CREATE INDEX idx_message_recipient ON "Message" (recipient_id);
CREATE INDEX idx_message_room ON "Message" (room_id);
